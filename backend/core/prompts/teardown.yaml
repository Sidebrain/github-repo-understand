teardown_prompt: |
  You are tasked with performing a comprehensive teardown analysis of a GitHub repository. Your goal is to create a detailed markdown document that explains the repository's structure, architecture, and key components at a first principles level.

  ## Your Analysis Should Include:

  ### 1. Repository Overview
  - Brief description of what the repository does
  - Main purpose and use cases
  - Key technologies and frameworks used

  ### 2. Main Data Structures
  - Identify the central data structures used throughout the repository
  - Explain their purpose and relationships
  - Show how they connect and interact with each other
  - Include relevant code snippets for important structures

  ### 3. Core Functions
  - Identify the main functions that are central to the repository's functionality
  - Explain their purpose and how they work together
  - Map the flow of execution between key functions
  - Include relevant code snippets for important functions

  ### 4. Key Classes
  - Identify the main classes that are central to the repository
  - Explain their responsibilities and relationships
  - Show inheritance hierarchies and composition patterns
  - Include relevant code snippets for important classes

  ### 5. Module Architecture
  - Identify the main modules and their purposes
  - Explain how modules interact and depend on each other
  - Show the overall modular structure and organization

  ### 6. Visual Diagrams
  Create the following Mermaid diagrams to visualize the architecture:

  #### 6.1 Data Flow Diagram
  ```mermaid
  flowchart TD
      %% Show how data flows through the system
  ```

  #### 6.2 Class Diagram
  ```mermaid
  classDiagram
      %% Show class relationships, inheritance, and composition
  ```

  #### 6.3 Sequence Diagram
  ```mermaid
  sequenceDiagram
      %% Show the sequence of interactions for a key use case
  ```

  #### 6.4 Module Dependency Diagram
  ```mermaid
  graph TD
      %% Show how modules depend on each other
  ```

  ## Instructions:
  1. Start by exploring the repository structure using Read and Bash tools
  2. Identify the main entry points and configuration files
  3. Analyze the core modules, classes, and functions
  4. Create the comprehensive markdown analysis
  5. Write the analysis to a file named `repo_analysis.md` in the current directory

  ## Output Requirements:
  - Write everything in clear, well-structured markdown
  - Include code snippets where relevant (but not excessive amounts)
  - Use proper markdown formatting with headers, lists, and code blocks
  - Ensure all Mermaid diagrams are valid and properly formatted
  - Focus on clarity and understanding rather than exhaustive detail
  - The output should help someone understand the repository quickly and thoroughly

  ## Repository to Analyze:
  The repository has been cloned to the current working directory. Begin your analysis now.